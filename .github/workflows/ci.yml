name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    lint-and-format:
        runs-on: ubuntu-latest
        name: Lint and Format Check

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint
              continue-on-error: true

            - name: Check formatting
              run: npm run format:check
              continue-on-error: true

    test:
        runs-on: ubuntu-latest
        name: Test Suite

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test
              continue-on-error: true

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              if: matrix.node-version == '18.x'
              continue-on-error: true

    build:
        runs-on: ubuntu-latest
        name: Build Check

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build project
              run: npm run build
              continue-on-error: true

            - name: Check build artifacts
              run: |
                  if [ -d "dist" ] || [ -d "build" ] || [ -d "lib" ]; then
                      echo "✅ Build artifacts found"
                      ls -la dist/ build/ lib/ 2>/dev/null || true
                  else
                      echo "⚠️  No build artifacts found (this might be expected)"
                  fi

    commit-validation:
        runs-on: ubuntu-latest
        name: Commit Message Validation
        if: github.event_name == 'pull_request'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Validate commit messages
              run: |
                  npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

    dependency-audit:
        runs-on: ubuntu-latest
        name: Security Audit

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run security audit
              run: npm audit --audit-level high
              continue-on-error: true

            - name: Check for outdated packages
              run: npm outdated
              continue-on-error: true

    type-check:
        runs-on: ubuntu-latest
        name: TypeScript Type Check

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: TypeScript type check
              run: npx tsc --noEmit
              continue-on-error: true

    quality-gate:
        runs-on: ubuntu-latest
        name: Quality Gate
        needs: [lint-and-format, test, build, dependency-audit, type-check]
        if: always()

        steps:
            - name: Check job results
              run: |
                  echo "Lint and Format: ${{ needs.lint-and-format.result }}"
                  echo "Test: ${{ needs.test.result }}"
                  echo "Build: ${{ needs.build.result }}"
                  echo "Dependency Audit: ${{ needs.dependency-audit.result }}"
                  echo "Type Check: ${{ needs.type-check.result }}"

                  if [[ "${{ needs.lint-and-format.result }}" == "failure" ]] || 
                     [[ "${{ needs.test.result }}" == "failure" ]] || 
                     [[ "${{ needs.build.result }}" == "failure" ]]; then
                      echo "❌ Quality gate failed"
                      exit 1
                  else
                      echo "✅ Quality gate passed"
                  fi
